IMDBScrapy

OVERVIEW
The project aims to crawl the top 250 movie data from IMDB (https://www.imdb.com/chart/top) and perform an analysis
based on the data.

REQUIREMENTS
The project uses Scrapy, Pandas, Matplotlib and Numpy aside from built-in modules hence these have to be first installed.

STRUCTURE
The structure of the project is given below, building on the default Scrapy project structure:
(for more information - https://docs.scrapy.org/en/latest/topics/commands.html#default-structure-of-scrapy-projects
Installing Scrapy - https://docs.scrapy.org/en/latest/intro/install.html)

imdbscrapy
  ├── docs
  │ ├── README.md                       # brief summary and description of the project and components
  │ └── IMDB Top 250 Analysis.pdf       # summary of the analysis on crawled data
  ├── scrapy.cfg                        # default Scrapy configuration file
  └── imdbscrapy/
    ├── __init__.py
    ├── main.py                         # main application that runs both IMDB crawling script and analysis script
    ├── analysis.py                     # python script to analyze IMDB data
    ├── items.py                        # contains my custom item and fields
    ├── middlewares.py                  # default from scrapy package
    ├── pipelines.py                    # default from scrapy package
    ├── settings.py                     # default from scrapy package
    ├── logs.log                        # log file
    └── imdb_spider.py                  # scrapy spider to crawl IMDB data

CRAWLING SCRIPT:
The crawling script imdb_spider.py can be run separately on the command line as any python script:
    python3 imdb_spider.py

The crawling script is also called in main.py hence running the main.py file will also generate the data as well as
produce the analysis.

The script is contained in imdb_spider.py file where the name of the spider is defined as 'imdbspider'.
Using the Scrapy module, it will crawl the IMDB Top 250 page http://www.imdb.com/chart/top as well as each movie
link to scrape the movie data. It will generate the IMDBTop250.csv file containing the data scraped.

Each field of the movie item is defined in items.py. The following movie data will be obtained:
1) rank
2) movie_id
3) title
4) year
5) movie_link
6) genre
7) rating
8) votes
9) origin
10) runtime_mins
11) awards_nominations
12) awards_wins
13) gross_worldwide_usd

MAIN PROGRAM
The main program for the project is main.py. The application also calls the crawling script from the imdb_spider module
so that there is no need to run two scripts separately.

After running the crawling script and the IMDBTop250.csv file has been generated, the analysis module will be ran.
This will give 2 figures with subplots for the analysis of the IMDB Top 250 data.

Scrapy already uses the logging module for event logging (for more information, https://docs.scrapy.org/en/latest/topics/logging.html)
and I made no alteration to the Scrapy logs, except to set levels for some loggers to WARNING to reduce noise in the logs.
Added custom logs for the analysis module to show info about the IMDB data and calculated correlation numbers.

ANALYSIS
Pandas was mainly used for the analysis, with Matplotlib to show the graphical representations.
Topic: What factors influence the IMDB rating? Is there a good predictor?
Method: I measured the correlation of rating and various quantifiable factors and looked at the average ratings
        across categorical factors that are available on the IMDB Top 250 page and individual movie pages.
Details: Please see the file 'IMDB Top 250 Analysis.pdf' for details of the analysis.



